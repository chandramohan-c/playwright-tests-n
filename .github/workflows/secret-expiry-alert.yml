name: Secret Expiry Alert

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  check_secrets:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }} # Set the GH_TOKEN environment variable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jq

      - name: Retrieve GitHub Secrets
        run: |
          gh api repos/${{ github.repository }}/actions/secrets --paginate > secrets.json

      - name: Print Secrets Data
        run: |
          python - << 'EOF'
          import json

          # Path to the secrets.json file
          file_path = 'secrets.json'

          # Load the JSON data from the file
          with open(file_path, 'r') as file:
              secrets_data = json.load(file)

          # Print total_count
          print(f"Total count: {secrets_data['total_count']}")

          # Print details of each secret
          for secret in secrets_data['secrets']:
              name = secret['name']
              created_at = secret['created_at']
              updated_at = secret['updated_at']
              print(f"Name: {name}, Created At: {created_at}, Updated At: {updated_at}")
          EOF

      - name: List repository secrets
        id: list_secrets
        run: |
          gh api repos/${{ github.repository }}/actions/secrets --paginate > secrets.json
          echo "::set-output name=secrets::$(jq -r '.secrets[] | @base64' secrets.json)"

      - name: Check and print expiring or expired secrets
        run: |
          secrets=${{ steps.list_secrets.outputs.secrets }}
          echo "$secrets" | tr ' ' '\n' | wc -l
          echo ${#secrets[@]}
          for secret in $secrets; do
            decoded_secret=$(echo $secret | base64 --decode)
            name=$(echo $decoded_secret | jq -r '.name')
            echo "secret name : $name"
            created_at=$(echo $decoded_secret | jq -r '.created_at')
            expiry_date=$(date -d "$created_at + 30 days" +%Y-%m-%d) # Assuming secrets expire after 90 days
            today=$(date +%Y-%m-%d)
            if [[ "$expiry_date" < "$today" || "$expiry_date" == "$today" ]]; then
              echo "Secret $name has expired or is expiring today (Expiry Date: $expiry_date)."
            fi
          done
